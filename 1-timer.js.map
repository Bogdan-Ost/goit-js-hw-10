{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// // Описаний у документації\n// import iziToast from 'izitoast';\n// // Додатковий імпорт стилів\n// import 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst timeDays = document.querySelector('span[data-days]');\nconst timeHour = document.querySelector('span[data-hours]');\nconst timeMinutes = document.querySelector('span[data-minutes]');\nconst timeSeconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates;\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nstartBtn.addEventListener('click', start);\n\nfunction start() {\n  setInterval(() => {\n    const starTime = Date.now();\n    const deltaTime = userSelectedDate - starTime;\n    const time = convertMs(deltaTime);\n    updateClockface(time);\n  }, 1000);\n}\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  timeDays.innerHTML = `${days}`;\n  timeHour.innerHTML = `${hours}`;\n  timeMinutes.innerHTML = `${minutes}`;\n  timeSeconds.innerHTML = `${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["input","startBtn","timeDays","timeHour","timeMinutes","timeSeconds","userSelectedDate","options","selectedDates","flatpickr","convertMs","ms","days","addLeadingZero","hours","minutes","seconds","start","starTime","deltaTime","time","updateClockface","value"],"mappings":"oFAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/D,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,CACpB,CACH,EAEAC,EAAUT,EAAOO,CAAO,EAExB,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAOC,EAAe,KAAK,MAAMF,EAAK,KAAG,CAAC,EAE1CG,EAAQ,KAAK,MAAOH,EAAK,MAAO,IAAI,EAEpCI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAQ,GAAM,EAEjDK,EAAU,KAAK,MAASL,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAMAf,EAAS,iBAAiB,QAASgB,CAAK,EAExC,SAASA,GAAQ,CACf,YAAY,IAAM,CAChB,MAAMC,EAAW,KAAK,MAChBC,EAAYb,EAAmBY,EAC/BE,EAAOV,EAAUS,CAAS,EAChCE,EAAgBD,CAAI,CACrB,EAAE,GAAI,CACT,CAEA,SAASC,EAAgB,CAAE,KAAAT,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1Dd,EAAS,UAAY,GAAGU,CAAI,GAC5BT,EAAS,UAAY,GAAGW,CAAK,GAC7BV,EAAY,UAAY,GAAGW,CAAO,GAClCV,EAAY,UAAY,GAAGW,CAAO,EACpC,CAEA,SAASH,EAAeS,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}